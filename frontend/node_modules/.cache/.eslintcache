[{"/home/wassim/Bureau/TODO/frontend/src/index.js":"1","/home/wassim/Bureau/TODO/frontend/src/App.js":"2","/home/wassim/Bureau/TODO/frontend/src/Context/UserContext.js":"3","/home/wassim/Bureau/TODO/frontend/src/Pages/Private.js":"4","/home/wassim/Bureau/TODO/frontend/src/Pages/LoginPage/Login.js":"5","/home/wassim/Bureau/TODO/frontend/src/Pages/RegisterPage/Register.js":"6","/home/wassim/Bureau/TODO/frontend/src/Pages/HomePage/Home.js":"7","/home/wassim/Bureau/TODO/frontend/src/Component/Navbar/Navbar.js":"8","/home/wassim/Bureau/TODO/frontend/src/Component/Navbar/Tasks/Task.js":"9"},{"size":369,"mtime":1686902972232,"results":"10","hashOfConfig":"11"},{"size":562,"mtime":1686902972232,"results":"12","hashOfConfig":"11"},{"size":1677,"mtime":1687166095580,"results":"13","hashOfConfig":"11"},{"size":390,"mtime":1686902972232,"results":"14","hashOfConfig":"11"},{"size":1378,"mtime":1687165177862,"results":"15","hashOfConfig":"11"},{"size":1913,"mtime":1687165175926,"results":"16","hashOfConfig":"11"},{"size":900,"mtime":1686902972232,"results":"17","hashOfConfig":"11"},{"size":409,"mtime":1686902972232,"results":"18","hashOfConfig":"11"},{"size":277,"mtime":1686902972232,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1doxv4i",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/home/wassim/Bureau/TODO/frontend/src/index.js",[],[],[],"/home/wassim/Bureau/TODO/frontend/src/App.js",[],[],"/home/wassim/Bureau/TODO/frontend/src/Context/UserContext.js",["52","53"],[],"/home/wassim/Bureau/TODO/frontend/src/Pages/Private.js",["54"],[],"import React, { useContext } from \"react\";\nimport { UserContext } from \"../Context/UserContext\";\nimport { Outlet, useLocation, Navigate } from \"react-router-dom\";\n\nexport default function Private() {\n\tconst { currentUser } = useContext(UserContext);\n\tconsole.log(\"PRIVATE\", currentUser);\n\n\tif (!currentUser) {\n\t\treturn <Navigate to=\"/\" />;\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<Outlet />\n\t\t</div>\n\t);\n}\n","/home/wassim/Bureau/TODO/frontend/src/Pages/LoginPage/Login.js",["55","56"],[],"import React, { useState, useContext, useRef } from \"react\";\nimport { UserContext } from \"../../Context/UserContext\";\nimport \"./Login.css\";\n\nexport default function Login() {\n\tconst [validation, setValidation] = useState(\"\");\n\tconst { signIn } = useContext(UserContext);\n\n\tconst inputs = useRef([]);\n\tconst addinputs = (e) => {\n\t\tif (e && !inputs.current.includes(e)) {\n\t\t\tinputs.current.push(e);\n\t\t}\n\t};\n\n\tconst formRef = useRef();\n\n\tconst handleLogin = async (e) => {\n\t\te.preventDefault();\n\t\t//validation coté serveur\n\t\ttry {\n\t\t\tconst cred = await signIn(\n\t\t\t\tinputs.current[0].value,\n\t\t\t\tinputs.current[1].value\n\t\t\t);\n\t\t\tformRef.current.reset();\n\t\t\tsetValidation(\"\");\n\t\t} catch (err) {\n\t\t\tsetValidation(\"password or username incorrect\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"main-container\">\n\t\t\t<h1 className=\"main-title\">TODO</h1>\n\t\t\t<form\n\t\t\t\taction=\"#\"\n\t\t\t\tclassName=\"login-form\"\n\t\t\t\tref={formRef}\n\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\thandleLogin(e);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<label htmlFor=\"username\">Username :</label>\n\t\t\t\t<input type=\"text\" id=\"username\" name=\"username\" ref={addinputs} />\n\t\t\t\t<label htmlFor=\"pwd\">Password :</label>\n\t\t\t\t<input type=\"password\" name=\"pwd\" id=\"pwd\" ref={addinputs} />\n\t\t\t\t<span>\n\t\t\t\t\tDont have account ? <a href=\"/register\">Register here</a>\n\t\t\t\t</span>\n\t\t\t\t<button type=\"submit\" className=\"login-btn\">\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n","/home/wassim/Bureau/TODO/frontend/src/Pages/RegisterPage/Register.js",["57"],[],"import React, { useContext, useRef, useState } from \"react\";\nimport { UserContext } from \"../../Context/UserContext\";\nimport \"../LoginPage/Login.css\";\n\nexport default function Register() {\n\tconst [validation, setValidation] = useState(\"\");\n\tconst { signUp } = useContext(UserContext);\n\n\tconst inputs = useRef([]);\n\tconst addinputs = (e) => {\n\t\tif (e && !inputs.current.includes(e)) {\n\t\t\tinputs.current.push(e);\n\t\t}\n\t};\n\tconst formRef = useRef();\n\n\tconst handleForm = async (e) => {\n\t\te.preventDefault();\n\n\t\t// Validation coté front\n\t\tif (\n\t\t\t(inputs.current[1].value.length || inputs.current[2].value.length) < 8\n\t\t) {\n\t\t\tsetValidation(\"8 characters minimum !\");\n\t\t\treturn;\n\t\t} else if (inputs.current[1].value !== inputs.current[2].value) {\n\t\t\tsetValidation(\"passwords do not match !\");\n\t\t\treturn;\n\t\t}\n\n\t\t//Validation coté back\n\t\ttry {\n\t\t\tconst cred = await signUp(\n\t\t\t\tinputs.current[0].value,\n\t\t\t\tinputs.current[1].value\n\t\t\t);\n\t\t\tformRef.current.reset();\n\t\t\tsetValidation(\"\");\n\t\t} catch (err) {\n\t\t\tif (err.code === \"ERR_BAD_REQUEST\") {\n\t\t\t\tsetValidation(\"Username Already exists\");\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"main-container\">\n\t\t\t<h1 className=\"main-title\">TODO</h1>\n\t\t\t<form\n\t\t\t\taction=\"#\"\n\t\t\t\tclassName=\"login-form\"\n\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\thandleForm(e);\n\t\t\t\t}}\n\t\t\t\tref={formRef}\n\t\t\t>\n\t\t\t\t<label htmlFor=\"username\">Username :</label>\n\t\t\t\t<input type=\"text\" id=\"username\" name=\"username\" ref={addinputs} />\n\t\t\t\t<label htmlFor=\"pwd\">Password :</label>\n\t\t\t\t<input type=\"password\" name=\"pwd\" id=\"pwd\" ref={addinputs} />\n\t\t\t\t<label htmlFor=\"confirm-pwd\">Confirm Password :</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"confirm-pwd\"\n\t\t\t\t\tid=\"confirm-pwd\"\n\t\t\t\t\tref={addinputs}\n\t\t\t\t/>\n\t\t\t\t<span>{validation}</span>\n\t\t\t\t<span>\n\t\t\t\t\tHave an account ? <a href=\"/\">Login here</a>\n\t\t\t\t</span>\n\t\t\t\t<button type=\"submit\" className=\"login-btn\">\n\t\t\t\t\tRegister\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n","/home/wassim/Bureau/TODO/frontend/src/Pages/HomePage/Home.js",["58"],[],"import React, { useState, useContext } from \"react\";\nimport Navbar from \"../../Component/Navbar/Navbar\";\nimport Task from \"../../Component/Navbar/Tasks/Task\";\nimport \"./Home.css\";\n\nexport default function Home() {\n\tconst [addTaskForm, setAddTaskForm] = useState(false);\n\n\tconst handleAddTask = () => {\n\t\tsetAddTaskForm(true);\n\t};\n\n\treturn (\n\t\t<div className=\"main\">\n\t\t\t<Navbar />\n\t\t\t<div className=\"task-container\">\n\t\t\t\t<h1>Tasks</h1>\n\t\t\t\t<Task description=\"miwmiw\" />\n\t\t\t\t{!addTaskForm ? (\n\t\t\t\t\t<button className=\"add-btn\" onClick={handleAddTask}>\n\t\t\t\t\t\t+\n\t\t\t\t\t</button>\n\t\t\t\t) : (\n\t\t\t\t\t<form action=\"#\" className=\"form-task\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"new-task\"\n\t\t\t\t\t\t\tclassName=\"input-task\"\n\t\t\t\t\t\t\tid=\"new-task\"\n\t\t\t\t\t\t\tplaceholder=\"Add your task\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button type=\"submit\" className=\"submit-task\">\n\t\t\t\t\t\t\t+\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/home/wassim/Bureau/TODO/frontend/src/Component/Navbar/Navbar.js",[],[],"/home/wassim/Bureau/TODO/frontend/src/Component/Navbar/Tasks/Task.js",[],[],{"ruleId":"59","severity":1,"message":"60","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":20},{"ruleId":"63","severity":1,"message":"64","line":32,"column":5,"nodeType":"65","endLine":32,"endColumn":7,"suggestions":"66"},{"ruleId":"59","severity":1,"message":"67","line":3,"column":18,"nodeType":"61","messageId":"62","endLine":3,"endColumn":29},{"ruleId":"59","severity":1,"message":"68","line":6,"column":9,"nodeType":"61","messageId":"62","endLine":6,"endColumn":19},{"ruleId":"59","severity":1,"message":"69","line":22,"column":10,"nodeType":"61","messageId":"62","endLine":22,"endColumn":14},{"ruleId":"59","severity":1,"message":"69","line":33,"column":10,"nodeType":"61","messageId":"62","endLine":33,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":37},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["70"],"'useLocation' is defined but never used.","'validation' is assigned a value but never used.","'cred' is assigned a value but never used.",{"desc":"71","fix":"72"},"Update the dependencies array to be: [navigate]",{"range":"73","text":"74"},[795,797],"[navigate]"]